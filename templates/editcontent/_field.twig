{% import '@bolt/_macro/_macro.twig' as macro %}
{% set templatefields = context.content.get('templatefields') %}
{% set field = '' %}
{% set type = '' %}

{% if 'templatefield_' in key and key|replace({'templatefield_': ''}) in templatefields.contenttype.fields|default([])|keys %}
    {% set key = key|replace({'templatefield_': ''}) %}
    {% set field = templatefields.contenttype.fields[key] %}
    {% set type = 'templatefield' %}
{% elseif 'relation_' in key and key|replace({'relation_': ''}) in  context.contenttype.relations|default([])|keys %}
    {% set key = key|replace({'relation_': ''}) %}
    {% set field = context.contenttype.relations[key] ? : config.get('taxonomy')[key]|default(false) %}
    {% set type = 'relation' %}
{% elseif 'taxonomy_' in key and key|replace({'taxonomy_': ''}) in context.contenttype.taxonomy|default([]) %}
    {% set key = key|replace({'taxonomy_': ''}) %}
    {% set field = config.get('taxonomy')[key] %}
    {% set type = 'taxonomy' %}
{% elseif key in context.contenttype.fields|keys %}
    {% set field = context.contenttype.fields[key] %}
{% endif %}

<div data-bolt-fieldset="{{ field.type|default(field.behaves_like|default(false))|default('relation') }}">
    {# Prefix #}
    {% if field.prefix is defined and field.prefix is not empty %}
        <div class="prefix">
            {{ field.prefix|markdown }}
        </div>
    {% endif %}

    {# Fields #}
    {% set labelkey = field.label|default(false) ?: key|ucfirst %}
    {% if type == 'templatefield' %}
        {% include context.fields[field.type].template with {
            field: field,
            key: 'templatefields-' ~ key,
            contentkey: key,
            context: context|merge({ content: templatefields }),
            name: 'templatefields[' ~ key ~ ']',
            labelkey:  labelkey
        } %}
    {% elseif type == 'relation' %}
        {{ include('@bolt/editcontent/fields/_relationship.twig', {relation: field, relcontenttype: key}) }}
    {% elseif type == 'taxonomy' %}
        {% if config.get('taxonomy')[key] is defined %}
            {% set taxonomy = config.get('taxonomy')[key] %}
            {# Fieldset #}
            {% if taxonomy.behaves_like == 'tags' %}
                {{ include('@bolt/editcontent/fields/_tags.twig') }}
            {% elseif taxonomy.behaves_like == 'categories' %}
                {{ include('@bolt/editcontent/fields/_categories.twig') }}
            {% elseif taxonomy.behaves_like == 'grouping' %}
                {{ include('@bolt/editcontent/fields/_grouping.twig') }}
            {% endif %}
        {% endif %}
    {% elseif key in context.contenttype.fields|keys %}
        {# Temporary approach until v4. @see https://github.com/bolt/bolt/issues/5237 #}
        {% set templatename = context.fields[field.type].template %}
        {% set templatename = [ templatename, '@bolt/' ~ templatename, '@bolt/editcontent/fields/_not_found.twig' ] %}
        {% include templatename with {
            'key': key,
            'name': key,
            'contentkey': key
        } %}
    {% endif %}
    {# Postfix #}
    {% if field.postfix is defined and field.postfix is not empty %}
        <div class="postfix">
            {{ field.postfix|markdown }}
        </div>
    {% endif %}

    {# Divider #}
    {% if field.separator is defined and field.separator == true %}
        <hr>
    {% endif %}
</div>
