{% import '_macro/_macro.twig' as macro %}

{% for key, field in newfields %}
    {% if group_name == field.group %}

        <div class="form-group" data-fieldtype="{{ field.type }}">
            {# Prefix #}
            {% if field.prefix is defined and field.prefix is not empty %}
                <div class="prefix">
                    {{ field.prefix|markdown }}
                </div>
            {% endif %}

            {# Fields #}
            {% set labelkey = field.label ?: key|ucfirst %}

            {% for fieldtype in context.fields %}
                {% if field.type == fieldtype.name %}
                    {% if field.templatefield %}
                       {% include fieldtype.template with {
                            field: field,
                            key: 'templatefields-' ~ key,
                            contentkey: key,
                            context: context|merge({ content: context.content.get('templatefields') }),
                            name: 'templatefields[' ~ key ~ ']',
                            labelkey:  labelkey
                        } %}
                    {% else %}
                        {% include fieldtype.template with {
                            'key': key,
                            'name': key,
                            'contentkey': key
                        } %}
                    {% endif %}
                {% endif %}
            {% endfor %}

            {# Postfix #}
            {% if field.postfix is defined and field.postfix is not empty %}
                <div class="postfix">
                    {{ field.postfix|markdown }}
                </div>
            {% endif %}

            {# Divider #}
            {% if field.separator is defined and field.separator == true %}
                <hr>
            {% endif %}
        </div>

    {% endif %}
{% endfor %}
